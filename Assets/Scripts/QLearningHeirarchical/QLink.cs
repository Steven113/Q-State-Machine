//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEditor;
using System.Collections.Generic;


namespace AssemblyCSharp
{
	[Serializable]
	public class QLink : EditorDisplay
	{
		public string startState = "default_start";
		public string endState = "default_end";
		public List<string> context = new List<string> ();
		public float rewardForTransition = 0;
		public bool global = true; //apply this link for all Q states?

		public QLink (string startState,
		              string endState,
		              float rewardForTransition, bool global, List<string> context)
		{
			this.startState = startState;
			this.endState = endState;
			this.rewardForTransition = rewardForTransition;
			this.global = global;
			this.context = context;
		}

		public QLink(){
		}

		public void ToEditorView(){
			startState = EditorGUILayout.TextField ("Start State", startState);
			endState = EditorGUILayout.TextField ("End State", endState);

			rewardForTransition = EditorGUILayout.FloatField ("Reward For Transition", rewardForTransition);
			global = EditorGUILayout.Toggle ("Affect all transitions?", global);
			int contextLength = EditorGUILayout.IntField (context.Count);
			if (contextLength > context.Count) {
				context.Capacity = contextLength;
				while ((contextLength > context.Count)) {
					context.Add ("default");
				}
			} else if (contextLength < context.Count) {
				while (contextLength < context.Count){
					context.RemoveAt(context.Count-1);
				}
			}
			EditorGUI.indentLevel += 5;
			for (int i = 0; i<context.Count; ++i) {
				context[i] = EditorGUILayout.TextField(context[i]);
			}
			EditorGUI.indentLevel -= 5;
		}
	}
}

