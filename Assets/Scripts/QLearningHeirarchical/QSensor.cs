//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;


namespace AssemblyCSharp
{


	/// <summary>
	/// Base class for all agents that can detect and provide their state to a q learner
	/// </summary>
	public abstract class QSensor : MonoBehaviour
	{

		/// <summary>
		/// Get enumerable states of agent
		/// </summary>
		/// <returns>The state.</returns>
		public abstract List<string> getState();

		/// <summary>
		/// Get continuous state variables of agent
		/// </summary>
		/// <returns>The state values.</returns>
		public abstract List<float> getStateValues ();

		/// <summary>
		/// return number of actions soldier is busy with
		/// </summary>
		/// <returns>number of actions soldier is busy with</returns>
		public abstract int GetBusyWithAction();

		/// <summary>
		/// Need this method to support manual rewards and punishments by the user
		/// </summary>
		/// <param name="reward">Reward.</param>
		public abstract void Reward(float reward);
	}
}

