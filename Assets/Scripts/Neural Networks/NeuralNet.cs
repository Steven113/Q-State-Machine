//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEditor;
using UnityEngine;


namespace AssemblyCSharp
{
	public class NeuralNet : EditorDisplay
	{
		int neuronID = 0;
		public List<List<Neuron>> neuronsByLayer = new List<List<Neuron>>(); //first list is inputs, last is outputs
		[NonSerialized] List<Vector2> scrollPosByLayer = new List<Vector2>();

		public NeuralNet(int numInputs, int numHiddenLayers, int numOutputs){
			neuronsByLayer.Add (new List<Neuron> (numInputs));
			scrollPosByLayer.Add (Vector2.zero);
			int numNeuronsForEachHiddenLayer = (int)((numInputs + numOutputs) * 0.5f);
			for (int i = 0; i<numHiddenLayers; ++i) {
				neuronsByLayer.Add (new List<Neuron> (numNeuronsForEachHiddenLayer));
				scrollPosByLayer.Add (Vector2.zero);
			}
			neuronsByLayer.Add (new List<Neuron> (numOutputs));
			scrollPosByLayer.Add (Vector2.zero);
		}

		public void ToEditorView (){
			for (int i = 0; i<neuronsByLayer.Count; ++i) {
				if (i ==0){
					EditorGUILayout.LabelField("Input layer");
				} else if (i == (neuronsByLayer.Count-1)){
					EditorGUILayout.LabelField("Output layer");
				} else {
					EditorGUILayout.LabelField("Hidden layer "+(i));
				}
				EditorGUI.indentLevel+=3;
				//EditorGUILayout.EndVertical();

				scrollPosByLayer[i] = EditorGUILayout.BeginScrollView(scrollPosByLayer[i]);
				//EditorGUILayout.BeginHorizontal();
				for (int j = 0; j<neuronsByLayer[i].Count; ++j){
					neuronsByLayer[i][j].ToEditorView();
					if (GUILayout.Button ("Remove", GUILayout.MaxWidth(100))){
						neuronsByLayer[i].RemoveAt(j);
						scrollPosByLayer.RemoveAt(j);
						--j;
					}
				}

				if (GUILayout.Button ("Add", GUILayout.MaxWidth(100))){
					neuronsByLayer[i].Add(new Neuron(++neuronID));
					scrollPosByLayer.Add(Vector2.zero);
				}
				//EditorGUILayout.EndHorizontal();
				EditorGUILayout.EndScrollView();

				//EditorGUILayout.BeginVertical();

				EditorGUI.indentLevel-=3;
			}
		}
	}
}

