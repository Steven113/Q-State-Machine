//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Collections.Generic;


namespace AssemblyCSharp
{
	//the heirarchical Q agent implemenation
	public class HQAgent : QAgent
	{
		QTree tree;

		List<string> possibleStates = new List<string>();

		public void Awake(){
			Debug.Assert (Utils.DeserializeFromFile<QTree>(qFileName,ref tree));
		}

		// we use the list of strings as a return parameter as we want to facilitate concept-action-mapping
		public override List<string> GetAction (List<string> state, List<float> values){
			return new List<string>();
		}
		
		//give the agent a reward instantly. The agent will add a reduced amount of the given reward value for the reward for it's given state/action pair. the bool indicates whether the Q-learning data structure needed to be expanded to detemine the result of the state
		public override bool RewardAgent (float reward){
			return false;
		}

		public override void Reset(){

		}
	}


}

